--
-- Track user activity and reset them
--
SET pg_stat_query_plans.track_utility = TRUE;
SELECT pg_stat_query_plans_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

CREATE ROLE regress_stats_user1;
CREATE ROLE regress_stats_user2;
SET ROLE regress_stats_user1;
SELECT 1 AS "ONE";
 ONE 
-----
   1
(1 row)

SELECT 1+1 AS "TWO";
 TWO 
-----
   2
(1 row)

RESET ROLE;
SET ROLE regress_stats_user2;
SELECT 1 AS "ONE";
 ONE 
-----
   1
(1 row)

SELECT 1+1 AS "TWO";
 TWO 
-----
   2
(1 row)

RESET ROLE;
SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";
                        query                         | calls | rows 
------------------------------------------------------+-------+------
 SELECT 1 AS "ONE";                                   |     1 |    1
 SELECT 1 AS "ONE";                                   |     1 |    1
 SELECT 1+1 AS "TWO";                                 |     1 |    1
 SELECT 1+1 AS "TWO";                                 |     1 |    1
 SELECT pg_stat_query_plans_reset() IS NOT NULL AS t; |     1 |    1
(5 rows)

--
-- Don't reset anything if any of the parameter is NULL
--
SELECT pg_stat_query_plans_reset(NULL) IS NOT NULL AS t;
 t 
---
 f
(1 row)

SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";
                                     query                                      | calls | rows 
--------------------------------------------------------------------------------+-------+------
 SELECT 1 AS "ONE";                                                             |     1 |    1
 SELECT 1 AS "ONE";                                                             |     1 |    1
 SELECT 1+1 AS "TWO";                                                           |     1 |    1
 SELECT 1+1 AS "TWO";                                                           |     1 |    1
 SELECT pg_stat_query_plans_reset() IS NOT NULL AS t;                           |     1 |    1
 SELECT pg_stat_query_plans_reset(NULL) IS NOT NULL AS t;                       |     1 |    1
 SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C"; |     1 |    5
(7 rows)

--
-- remove query ('SELECT $1+$2 AS "TWO"') executed by regress_stats_user2
-- in the current_database
--
SELECT pg_stat_query_plans_reset(
	(SELECT r.oid FROM pg_roles AS r WHERE r.rolname = 'regress_stats_user2'),
	(SELECT d.oid FROM pg_database As d where datname = current_database()),
	(SELECT s.queryid FROM pg_stat_query_plans AS s
				WHERE s.query like 'SELECT % AS "TWO"' LIMIT 1))
	IS NOT NULL AS t;
 t 
---
 f
(1 row)

SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";
                                       query                                        | calls | rows 
------------------------------------------------------------------------------------+-------+------
 SELECT 1 AS "ONE";                                                                 |     1 |    1
 SELECT 1 AS "ONE";                                                                 |     1 |    1
 SELECT 1+1 AS "TWO";                                                               |     1 |    1
 SELECT 1+1 AS "TWO";                                                               |     1 |    1
 SELECT pg_stat_query_plans_reset(                                                 +|     1 |    1
         (SELECT r.oid FROM pg_roles AS r WHERE r.rolname = 'regress_stats_user2'),+|       | 
         (SELECT d.oid FROM pg_database As d where datname = current_database()),  +|       | 
         (SELECT s.queryid FROM pg_stat_query_plans AS s                           +|       | 
                                 WHERE s.query like 'SELECT % AS "TWO"' LIMIT 1))  +|       | 
         IS NOT NULL AS t;                                                          |       | 
 SELECT pg_stat_query_plans_reset() IS NOT NULL AS t;                               |     1 |    1
 SELECT pg_stat_query_plans_reset(NULL) IS NOT NULL AS t;                           |     1 |    1
 SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";     |     2 |   12
(8 rows)

--
-- remove query ('SELECT $1 AS "ONE"') executed by two users
--
SELECT pg_stat_query_plans_reset(0,0,s.queryid) IS NOT NULL AS t
	FROM pg_stat_query_plans AS s WHERE s.query like 'SELECT % AS "ONE"';
 t 
---
(0 rows)

SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";
                                       query                                        | calls | rows 
------------------------------------------------------------------------------------+-------+------
 SELECT 1 AS "ONE";                                                                 |     1 |    1
 SELECT 1 AS "ONE";                                                                 |     1 |    1
 SELECT 1+1 AS "TWO";                                                               |     1 |    1
 SELECT 1+1 AS "TWO";                                                               |     1 |    1
 SELECT pg_stat_query_plans_reset(                                                 +|     1 |    1
         (SELECT r.oid FROM pg_roles AS r WHERE r.rolname = 'regress_stats_user2'),+|       | 
         (SELECT d.oid FROM pg_database As d where datname = current_database()),  +|       | 
         (SELECT s.queryid FROM pg_stat_query_plans AS s                           +|       | 
                                 WHERE s.query like 'SELECT % AS "TWO"' LIMIT 1))  +|       | 
         IS NOT NULL AS t;                                                          |       | 
 SELECT pg_stat_query_plans_reset() IS NOT NULL AS t;                               |     1 |    1
 SELECT pg_stat_query_plans_reset(0,0,s.queryid) IS NOT NULL AS t                  +|     1 |    0
         FROM pg_stat_query_plans AS s WHERE s.query like 'SELECT % AS "ONE"';      |       | 
 SELECT pg_stat_query_plans_reset(NULL) IS NOT NULL AS t;                           |     1 |    1
 SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";     |     3 |   20
(9 rows)

--
-- remove query of a user (regress_stats_user1)
--
SELECT pg_stat_query_plans_reset(r.oid) IS NOT NULL AS t
		FROM pg_roles AS r WHERE r.rolname = 'regress_stats_user1';
 t 
---
 t
(1 row)

SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";
                                       query                                        | calls | rows 
------------------------------------------------------------------------------------+-------+------
 SELECT 1 AS "ONE";                                                                 |     1 |    1
 SELECT 1+1 AS "TWO";                                                               |     1 |    1
 SELECT pg_stat_query_plans_reset(                                                 +|     1 |    1
         (SELECT r.oid FROM pg_roles AS r WHERE r.rolname = 'regress_stats_user2'),+|       | 
         (SELECT d.oid FROM pg_database As d where datname = current_database()),  +|       | 
         (SELECT s.queryid FROM pg_stat_query_plans AS s                           +|       | 
                                 WHERE s.query like 'SELECT % AS "TWO"' LIMIT 1))  +|       | 
         IS NOT NULL AS t;                                                          |       | 
 SELECT pg_stat_query_plans_reset() IS NOT NULL AS t;                               |     1 |    1
 SELECT pg_stat_query_plans_reset(0,0,s.queryid) IS NOT NULL AS t                  +|     1 |    0
         FROM pg_stat_query_plans AS s WHERE s.query like 'SELECT % AS "ONE"';      |       | 
 SELECT pg_stat_query_plans_reset(NULL) IS NOT NULL AS t;                           |     1 |    1
 SELECT pg_stat_query_plans_reset(r.oid) IS NOT NULL AS t                          +|     1 |    1
                 FROM pg_roles AS r WHERE r.rolname = 'regress_stats_user1';        |       | 
 SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";     |     4 |   29
(8 rows)

--
-- reset all
--
SELECT pg_stat_query_plans_reset(0,0,0) IS NOT NULL AS t;
 t 
---
 t
(1 row)

SELECT query, calls, rows FROM pg_stat_query_plans ORDER BY query COLLATE "C";
                           query                           | calls | rows 
-----------------------------------------------------------+-------+------
 SELECT pg_stat_query_plans_reset(0,0,0) IS NOT NULL AS t; |     1 |    1
(1 row)

--
-- cleanup
--
DROP ROLE regress_stats_user1;
DROP ROLE regress_stats_user2;
SELECT pg_stat_query_plans_reset() IS NOT NULL AS t;
 t 
---
 t
(1 row)

